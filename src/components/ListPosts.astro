---
import type { CollectionEntry } from 'astro:content'
import PostCard from '@/components/PostCard'
import { cn } from '@/utils'

type Props = {
	posts: CollectionEntry<'blog'>[]
	FirstBig?: boolean
}

const { posts, FirstBig = false } = Astro.props

// Sort posts: pinned posts first, then by date
const sortedPosts = posts.sort((a, b) => {
	// Check if posts are pinned
	const pinnedA = a.data.pinned || false
	const pinnedB = b.data.pinned || false

	if (pinnedA && !pinnedB) return -1
	if (!pinnedA && pinnedB) return 1

	// If neither or both are pinned, sort by date (most recent first)
	return new Date(b.data.date) - new Date(a.data.date)
})
---

<section
	class={cn(
		`grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3  gap-8 mt-3`,
		FirstBig && `md:[&>*:first-child]:col-span-2`
	)}
>
	{
		sortedPosts.map(async (post) => {
			const { remarkPluginFrontmatter } = await post.render()

			return (
				<PostCard
					id={post.id}
					data={post.data}
					slug={post.slug}
					readTime={remarkPluginFrontmatter.minutesRead}
				/>
			)
		})
	}
</section>
